"""Add snapshot support to GTFS models

Revision ID: ec75890a553c
Revises: a4e958edfa81
Create Date: 2025-08-18 14:22:47.161082

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ec75890a553c'
down_revision: Union[str, Sequence[str], None] = 'a4e958edfa81'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('agency', sa.Column('snapshot_id', sa.String(), nullable=False))
    op.add_column('agency', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('agency', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_unique_constraint('uq_agency_snapshot', 'agency', ['agency_id', 'snapshot_id'])
    op.add_column('calendar', sa.Column('snapshot_id', sa.String(), nullable=False))
    op.add_column('calendar', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('calendar', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_unique_constraint('uq_calendar_snapshot', 'calendar', ['service_id', 'snapshot_id'])
    op.add_column('calendar_dates', sa.Column('snapshot_id', sa.String(), nullable=False))
    op.add_column('calendar_dates', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('calendar_dates', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_unique_constraint('uq_calendar_dates_snapshot', 'calendar_dates', ['service_id', 'date', 'snapshot_id'])
    op.add_column('fare_attributes', sa.Column('snapshot_id', sa.String(), nullable=False))
    op.add_column('fare_attributes', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('fare_attributes', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_unique_constraint('uq_fare_attributes_snapshot', 'fare_attributes', ['fare_id', 'snapshot_id'])
    op.add_column('fare_rules', sa.Column('snapshot_id', sa.String(), nullable=False))
    op.add_column('fare_rules', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('fare_rules', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_unique_constraint('uq_fare_rules_snapshot', 'fare_rules', ['fare_id', 'route_id', 'snapshot_id'])
    op.add_column('feed_info', sa.Column('snapshot_id', sa.String(), nullable=False))
    op.add_column('feed_info', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('feed_info', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_unique_constraint('uq_feed_info_snapshot', 'feed_info', ['id', 'snapshot_id'])
    op.add_column('routes', sa.Column('snapshot_id', sa.String(), nullable=False))
    op.add_column('routes', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('routes', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_unique_constraint('uq_routes_snapshot', 'routes', ['route_id', 'snapshot_id'])
    op.add_column('shapes', sa.Column('snapshot_id', sa.String(), nullable=False))
    op.add_column('shapes', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('shapes', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_unique_constraint('uq_shapes_snapshot', 'shapes', ['shape_id', 'shape_pt_sequence', 'snapshot_id'])
    op.add_column('stop_times', sa.Column('snapshot_id', sa.String(), nullable=False))
    op.add_column('stop_times', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('stop_times', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_unique_constraint('uq_stop_times_snapshot', 'stop_times', ['trip_id', 'stop_sequence', 'snapshot_id'])
    op.add_column('stops', sa.Column('snapshot_id', sa.String(), nullable=False))
    op.add_column('stops', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('stops', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_unique_constraint('uq_stops_snapshot', 'stops', ['stop_id', 'snapshot_id'])
    op.add_column('trips', sa.Column('snapshot_id', sa.String(), nullable=False))
    op.add_column('trips', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('trips', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_unique_constraint('uq_trips_snapshot', 'trips', ['trip_id', 'snapshot_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_trips_snapshot', 'trips', type_='unique')
    op.drop_column('trips', 'updated_at')
    op.drop_column('trips', 'created_at')
    op.drop_column('trips', 'snapshot_id')
    op.drop_constraint('uq_stops_snapshot', 'stops', type_='unique')
    op.drop_column('stops', 'updated_at')
    op.drop_column('stops', 'created_at')
    op.drop_column('stops', 'snapshot_id')
    op.drop_constraint('uq_stop_times_snapshot', 'stop_times', type_='unique')
    op.drop_column('stop_times', 'updated_at')
    op.drop_column('stop_times', 'created_at')
    op.drop_column('stop_times', 'snapshot_id')
    op.drop_constraint('uq_shapes_snapshot', 'shapes', type_='unique')
    op.drop_column('shapes', 'updated_at')
    op.drop_column('shapes', 'created_at')
    op.drop_column('shapes', 'snapshot_id')
    op.drop_constraint('uq_routes_snapshot', 'routes', type_='unique')
    op.drop_column('routes', 'updated_at')
    op.drop_column('routes', 'created_at')
    op.drop_column('routes', 'snapshot_id')
    op.drop_constraint('uq_feed_info_snapshot', 'feed_info', type_='unique')
    op.drop_column('feed_info', 'updated_at')
    op.drop_column('feed_info', 'created_at')
    op.drop_column('feed_info', 'snapshot_id')
    op.drop_constraint('uq_fare_rules_snapshot', 'fare_rules', type_='unique')
    op.drop_column('fare_rules', 'updated_at')
    op.drop_column('fare_rules', 'created_at')
    op.drop_column('fare_rules', 'snapshot_id')
    op.drop_constraint('uq_fare_attributes_snapshot', 'fare_attributes', type_='unique')
    op.drop_column('fare_attributes', 'updated_at')
    op.drop_column('fare_attributes', 'created_at')
    op.drop_column('fare_attributes', 'snapshot_id')
    op.drop_constraint('uq_calendar_dates_snapshot', 'calendar_dates', type_='unique')
    op.drop_column('calendar_dates', 'updated_at')
    op.drop_column('calendar_dates', 'created_at')
    op.drop_column('calendar_dates', 'snapshot_id')
    op.drop_constraint('uq_calendar_snapshot', 'calendar', type_='unique')
    op.drop_column('calendar', 'updated_at')
    op.drop_column('calendar', 'created_at')
    op.drop_column('calendar', 'snapshot_id')
    op.drop_constraint('uq_agency_snapshot', 'agency', type_='unique')
    op.drop_column('agency', 'updated_at')
    op.drop_column('agency', 'created_at')
    op.drop_column('agency', 'snapshot_id')
    # ### end Alembic commands ###
